name: Deploy to Staging

on:
  push:
    branches:
      - develop

env:
  PYTHON_VERSION: '3.11'
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: 'backend/requirements.txt'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest tests/ -v --tb=short
        env:
          APP_NAME: "Task Management API - Test"
          DATABASE_URL: "sqlite:///./test.db"
          OPENAI_API_KEY: "test-key"
          PINECONE_API_KEY: "test-key"

  deploy:
    name: Deploy to GCP App Engine (Staging)
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Install yq for YAML processing
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Deploy to App Engine (Staging)
        run: |
          # Create app.yaml with secrets injected into env_variables section using yq
          cp app.staging.yaml app.deploy.yaml

          # Use yq to properly inject the API keys into the YAML structure
          yq eval '.env_variables.OPENAI_API_KEY = "${{ secrets.OPENAI_API_KEY }}"' -i app.deploy.yaml
          yq eval '.env_variables.PINECONE_API_KEY = "${{ secrets.PINECONE_API_KEY }}"' -i app.deploy.yaml

          # Deploy with the modified app.yaml and promote it
          gcloud app deploy app.deploy.yaml --quiet --version=staging-${{ github.sha }} --promote

          # Clean up
          rm app.deploy.yaml

      - name: Verify deployment
        run: |
          echo "Deployment completed successfully!"
          echo "Staging URL: https://staging-${{ github.sha }}-dot-${{ env.GCP_PROJECT_ID }}.appspot.com"
