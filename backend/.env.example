# ========================================
# TasksAI Backend Environment Variables
# ========================================
# Copy this file to .env and fill in your actual values
# NEVER commit .env with real secrets to version control

# Application Settings
APP_NAME="TasksAI - Development"
DEBUG=True

# Security
# Generate a secure random key: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=your-secret-key-here-generate-a-random-one

# Database Configuration
# For local development (SQLite)
DATABASE_URL=sqlite:///./tasksai.db
# For production (PostgreSQL) - uncomment and configure:
# DATABASE_URL=postgresql://username:password@localhost:5432/tasksai
DATABASE_ECHO=False

# OpenAI API Configuration
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-...your-openai-api-key...
OPENAI_MODEL=gpt-4o-mini
OPENAI_EMBEDDING_MODEL=text-embedding-3-small

# Pinecone Vector Database Configuration
# Get your API key from: https://app.pinecone.io/
PINECONE_API_KEY=...your-pinecone-api-key...
PINECONE_INDEX_NAME=task-recommendations
PINECONE_NAMESPACE=default
PINECONE_CLOUD=aws
PINECONE_REGION=us-east-1

# Google OAuth (Optional - for Google Sign-In)
# Get credentials from: https://console.cloud.google.com/apis/credentials
# GOOGLE_CLIENT_ID=your-client-id.apps.googleusercontent.com
# GOOGLE_CLIENT_SECRET=your-client-secret

# CORS Configuration
# Comma-separated list of allowed origins
BACKEND_CORS_ORIGINS=["http://localhost:8000","http://localhost:8081"]
